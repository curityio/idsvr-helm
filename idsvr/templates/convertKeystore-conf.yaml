{{- if .Values.curity.config.convertKeystore }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "curity.fullname" $ }}-convert-ks-secret-envs
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
type: Opaque
data:
  placeholder: vREja0OP
{{- range $convertKs := .Values.curity.config.convertKeystore }}
{{- if $convertKs.sourceTls }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $convertKs.sourceTls.keyName | lower | replace "_" "-" }}-cks-conf-map
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
data:
  convertKeystoreSecret.sh: |
    #!/bin/bash

    CA_CERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)

    openssl pkcs12 -export -name {{ $convertKs.sourceTls.inAlias }} -inkey /var/run/secrets/{{ $convertKs.sourceTls.fromSecretRef }}/tls.key -in /var/run/secrets/{{ $convertKs.sourceTls.fromSecretRef }}/tls.crt -out /var/run/keystore/curity.p12 -password pass:${KEYSTORE_PASSWORD} && openssl base64 -in /var/run/keystore/curity.p12 -out /var/run/keystore/curity.p12-b64 -A
    KEY=$(/opt/idsvr/bin/convertks --in-password ${KEYSTORE_PASSWORD}  --in-alias {{ $convertKs.sourceTls.inAlias }} --in-entry-password ${KEYSTORE_PASSWORD} --in-file /var/run/keystore/curity.p12-b64 | base64 -w 0)

    {{- if $convertKs.sourceTls.cert }}
    CERT=$(cat /var/run/secrets/{{ $convertKs.sourceTls.fromSecretRef }}/tls.crt | base64 -w 0)
    {{- end }}

    REQUEST_CONTENT="[{\"op\": \"add\", \"path\": \"/data/{{ $convertKs.sourceTls.keyName }}\", \"value\": \"$KEY\" }{{ if $convertKs.sourceTls.cert }}, {\"op\": \"add\", \"path\": \"/data/{{ $convertKs.sourceTls.cert }}\", \"value\": \"$CERT\" }{{ end }}]"
    openssl 2>&1 s_client -CAfile $CA_CERT -quiet -connect kubernetes.default:443 <<EOF
    PATCH /api/v1/namespaces/$NAMESPACE/secrets/$SECRET_NAME HTTP/1.1
    Host: kubernetes.default
    Authorization: Bearer $TOKEN
    Connection: close
    Content-Type: application/json-patch+json
    Content-length: ${#REQUEST_CONTENT}
    Accept: application/json

    $REQUEST_CONTENT
    EOF

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $convertKs.sourceTls.keyName | lower | replace "_" "-" }}-cks-job
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      annotations:
        {{- if .Values.curity.jobsAnnotations }}
          {{- .Values.curity.jobsAnnotations | toYaml | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ $convertKs.sourceTls.keyName | lower | replace "_" "-" }}-keystore-conf-job
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: [ "sh", "/opt/idsvr/bin/convertKeystoreSecret.sh" ]
          env:
            - name: SECRET_NAME
              value: {{ include "curity.fullname" $ }}-convert-ks-secret-envs
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $convertKs.sourceTls.keystorePasswordSecretRef.name }}
                  key: {{ $convertKs.sourceTls.keystorePasswordSecretRef.key }}
          volumeMounts:
            - name: entrypoint-volume
              mountPath: /opt/idsvr/bin/convertKeystoreSecret.sh
              subPath: convertKeystoreSecret.sh
            - name: serving-cert-volume
              mountPath: /var/run/secrets/{{ $convertKs.sourceTls.fromSecretRef }}
              readOnly: true
            - name: keystore-volume
              mountPath: /var/run/keystore
      volumes:
        - name: entrypoint-volume
          configMap:
            name: {{ $convertKs.sourceTls.keyName | lower | replace "_" "-" }}-cks-conf-map
        - name: serving-cert-volume
          secret:
            secretName: {{ $convertKs.sourceTls.fromSecretRef }}
        - name: keystore-volume
          emptyDir: {}
      serviceAccountName: {{ include "curity.fullname" $ }}-service-account
      restartPolicy: Never
{{- end }}
{{- end }}
{{- end }}